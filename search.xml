<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>SeleniumIDE支持Chrome了</title>
      <link href="/2018/04/20/SeleniumIDE%E6%94%AF%E6%8C%81Chrome%E4%BA%86/"/>
      <url>/2018/04/20/SeleniumIDE%E6%94%AF%E6%8C%81Chrome%E4%BA%86/</url>
      <content type="html"><![CDATA[<p>SeleniumIDE悄悄支持Chrome了.从源代码来看使用react做了重新开发</p><p>(2018-04-20)<br><img src="/images/pasted-4.png" style="width:600px;border:solid 1px"></p><h5 id="四不像的脚本"><a href="#四不像的脚本" class="headerlink" title="四不像的脚本"></a>四不像的脚本</h5><p>selenium-ide以前生成的脚本是浏览器无关的纯文本.<br>像这种:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">|click |button| </span><br><span class="line">|type  |input |abc|</span><br></pre></td></tr></table></figure></p><p>也支持导出为html(旧版本支持)<br>现在索性直接用json文件保存了…<br>还专程做了一个项目sideex,没什么人气:<br><a href="http://sideex.org" target="_blank" rel="noopener">http://sideex.org</a></p><p>注:脚本为.side文件,连v1和v2为同一个类型</p><p><img src="/images/pasted-5.png" style="width:400;border:solid 1px"></p><p>生成的脚本其实并没有什么用</p><ul><li>脚本不能用来共享(套件和用例多人一起分工)</li><li>脚本不能用来协作(如放到git)</li><li>实际可用性不如robot framwork </li><li>导出的代码还要改来改去,各种不如意</li><li>缺少keywords管理(Action共享)</li></ul><p>总的说来,这玩意只能做做登陆登陆登陆登陆登陆</p><h5 id="期待功能"><a href="#期待功能" class="headerlink" title="期待功能:"></a>期待功能:</h5><ul><li>协作</li><li>拆分用例</li><li>keyword管理</li></ul>]]></content>
      
      <categories>
          
          <category> robot framework </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>理清几个webdriver的关系</title>
      <link href="/2018/04/18/%E7%90%86%E6%B8%85%E5%87%A0%E4%B8%AAwebdriver%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
      <url>/2018/04/18/%E7%90%86%E6%B8%85%E5%87%A0%E4%B8%AAwebdriver%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
      <content type="html"><![CDATA[<h4 id="平常用到的driver"><a href="#平常用到的driver" class="headerlink" title="平常用到的driver"></a>平常用到的driver</h4><table><thead><tr><th>driver</th><th style="text-align:center">port</th><th style="text-align:right">path</th></tr></thead><tbody><tr><td>chromedriver</td><td style="text-align:center">9515</td><td style="text-align:right">/</td></tr><tr><td>geckerdriver</td><td style="text-align:center">4444</td><td style="text-align:right">/</td></tr><tr><td>safaridriver</td><td style="text-align:center">0</td><td style="text-align:right">/</td></tr><tr><td>iedriverserver</td><td style="text-align:center">?</td><td style="text-align:right">/</td></tr><tr><td>StandaloneServer</td><td style="text-align:center">4444</td><td style="text-align:right">/wd/hub</td></tr></tbody></table><p>他们都可以做为独立远程服务器执行–负责创建浏览器/关闭浏览器,各有用途.<br>也可以做为本地服务启动.<br>使用w3c webdriver协议(<a href="https://www.w3.org/TR/webdriver/" target="_blank" rel="noopener">https://www.w3.org/TR/webdriver/</a>)</p><p>平常调试代码时,chromedriver启动是隐性透明的.</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>以chrome为例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new ChromeDriver()//竟然是运行chromedriver.exe</span><br></pre></td></tr></table></figure></p><p><img src="/images/pasted-3.png" alt="upload successful"></p><h4 id="启动速度太慢的问题"><a href="#启动速度太慢的问题" class="headerlink" title="启动速度太慢的问题"></a>启动速度太慢的问题</h4><p>后面有时间我再写点.目前主要是因为driver创建了一个浏览器副本.</p><ul><li>java我已经解决了</li><li>python还在做</li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>RobotFramework插件强制支持动态库</title>
      <link href="/2018/04/16/RobotFramework%E6%8F%92%E4%BB%B6%E5%BC%BA%E5%88%B6%E6%94%AF%E6%8C%81%E5%8A%A8%E6%80%81%E5%BA%93/"/>
      <url>/2018/04/16/RobotFramework%E6%8F%92%E4%BB%B6%E5%BC%BA%E5%88%B6%E6%94%AF%E6%8C%81%E5%8A%A8%E6%80%81%E5%BA%93/</url>
      <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>对于SeleniumLibrary 3.0 全是动态关键字.原生插件不支持动态关键字索引.</p><p>由于pycharm一直报错很不爽,fork了代码<a href="https://github.com/youwi/intellibot" target="_blank" rel="noopener">https://github.com/youwi/intellibot</a><br>可以从这里直接下载jar包来安装.暂不打算合并代码.</p><p>效果:<br><img src="/images/pasted-2.png" alt="upload successful"></p><p>说下idea的索引结构,调用索引有以下方法:</p><pre><code>PyFunctionNameIndex.find() 返回方法PyModuleNameIndex.find()   返回文件PyClassNameIndex.find()    返回类层级关系:Module-&gt;Class-&gt;Functions故(伪码):PyModuleNameIndex.find(?)    -&gt;t.getChildren()    -&gt;t.isPyClass    -&gt;t.getNextSibling()  //获取兄弟文件    -&gt;t.getChildren()     -&gt;t.isPyClass    ....</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">// com.millennialmedia.intellibot.psi.element.HeadingImpl.java</span></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">     * search sibling library by keywords</span></span><br><span class="line"><span class="comment">     * patch for SeleniumLibrary dynamic keywords</span></span><br><span class="line"><span class="comment">     * support all libraries that contain "keywords" package.</span></span><br><span class="line"><span class="comment">     * @param files  all pyClass</span></span><br><span class="line"><span class="comment">     * @param libraryName  default search is keywords.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">findChildrenClass</span><span class="params">(Collection files,String libraryName)</span></span>&#123;</span><br><span class="line"><span class="comment">//        // this is temporary patch,each patch return All keywords from file</span></span><br><span class="line">        <span class="comment">// Force Patch by Selenium</span></span><br><span class="line"><span class="comment">//        String[] sourcelist = &#123;</span></span><br><span class="line"><span class="comment">//                "open_browser",</span></span><br><span class="line"><span class="comment">//                "get_cookies",</span></span><br><span class="line"><span class="comment">//                "input_text_into_prompt",</span></span><br><span class="line"><span class="comment">//                "get_webelement",</span></span><br><span class="line"><span class="comment">//                "submit_form",</span></span><br><span class="line"><span class="comment">//                "select_frame",</span></span><br><span class="line"><span class="comment">//                "execute_javascript",</span></span><br><span class="line"><span class="comment">//                "register_keyword_to_run_on_failure",</span></span><br><span class="line"><span class="comment">//                "set_screenshot_directory",</span></span><br><span class="line"><span class="comment">//                "get_list_items",</span></span><br><span class="line"><span class="comment">//                "get_table_cell",</span></span><br><span class="line"><span class="comment">//                "wait_for_condition",</span></span><br><span class="line"><span class="comment">//                "active_drivers",</span></span><br><span class="line"><span class="comment">//                "create_driver",</span></span><br><span class="line"><span class="comment">//                "select_window"</span></span><br><span class="line"><span class="comment">//        &#125;;</span></span><br><span class="line"><span class="comment">//        for (String str : sourcelist) &#123;</span></span><br><span class="line"><span class="comment">//            Collection&lt;PyFunction&gt; funcs = PyFunctionNameIndex.find(str, getProject());</span></span><br><span class="line"><span class="comment">//            for (PyFunction pyfunc : funcs) &#123;</span></span><br><span class="line"><span class="comment">//                PyClass cs = pyfunc.getContainingClass();</span></span><br><span class="line"><span class="comment">//                files.add(new RobotPythonClass(cs.getName(), cs, ImportType.LIBRARY));</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        Collection&lt;PyFile&gt; fileList=PyModuleNameIndex.find(libraryName,getProject(),<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">for</span>(PyFile pyFile:fileList)&#123;</span><br><span class="line">            PyFile nextFile=pyFile;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (nextFile!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                PsiElement[] all= nextFile.getChildren();</span><br><span class="line">                <span class="keyword">for</span>(PsiElement psiElement:all)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(psiElement <span class="keyword">instanceof</span> PyClass)&#123;</span><br><span class="line">                        files.add(<span class="keyword">new</span> RobotPythonClass(((PyClass) psiElement).getName(), (PyClass) psiElement, ImportType.LIBRARY));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                nextFile= (PyFile) nextFile.getNextSibling();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>RobotFramework插件不支持动态库</title>
      <link href="/2018/04/13/RobotFramework%E6%8F%92%E4%BB%B6%E7%89%B9%E6%80%A7%E8%AF%B4%E6%98%8E/"/>
      <url>/2018/04/13/RobotFramework%E6%8F%92%E4%BB%B6%E7%89%B9%E6%80%A7%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><pre><code>robot framework plugin for idea 还不支持动态库关键字.(2018-04-12)Selenium 3.0以后都不支持关键自动补全.PyCharm和idea还提示错误,无话可说.</code></pre><p><img src="/images/pasted-1.png" width="50%" height="50%"></p><h5 id="英文说明"><a href="#英文说明" class="headerlink" title="英文说明"></a>英文说明</h5><pre><code>The issue is clearly related to the fact that SeleniumLibrary 3+ is dynamic library.In case of dynamic library, keywords are resolved during test execution (you can compare S2E 1.8 and SE 3+ code). Both this RobotFramework Support plugins work only with static libraries.If you want to use this plugin together with RF3+ with up to date keyword list, I would recommend you to use workaround (though it&apos;s dirty naughty hack), generating static library referencing keywords from dynamic one. So you can use it in your Robot resources or tests.</code></pre>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/04/12/hello-world/"/>
      <url>/2018/04/12/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<ul><li>公司:lieluobo.com</li><li>工作地址: 上海</li><li>熟悉语言:java/node/python</li><li>领域:测试/自动化测试</li></ul><p><img src="/images/pasted-6.png" style="width:200px;"></p>]]></content>
    </entry>
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
